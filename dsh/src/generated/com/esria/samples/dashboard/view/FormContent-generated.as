
/**
 * 	Generated by mxmlc 2.0
 *
 *	Package:	com.esria.samples.dashboard.view
 *	Class: 		FormContent
 *	Source: 	C:\Documents and Settings\a\My Documents\Flex Builder 3\dsh\src\com\esria\samples\dashboard\view\FormContent.mxml
 *	Template: 	flex2/compiler/mxml/gen/ClassDef.vm
 *	Time: 		2009.10.21 17:04:12 CST
 */

package com.esria.samples.dashboard.view
{

import com.esria.samples.dashboard.view.PodContentBase;
import flash.accessibility.*;
import flash.debugger.*;
import flash.display.*;
import flash.errors.*;
import flash.events.*;
import flash.events.MouseEvent;
import flash.external.*;
import flash.filters.*;
import flash.geom.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import mx.binding.*;
import mx.binding.IBindingClient;
import mx.containers.Canvas;
import mx.containers.HBox;
import mx.containers.VBox;
import mx.containers.ViewStack;
import mx.controls.Button;
import mx.controls.ComboBox;
import mx.controls.DataGrid;
import mx.controls.DateField;
import mx.controls.Label;
import mx.controls.Spacer;
import mx.controls.TextArea;
import mx.controls.TextInput;
import mx.controls.dataGridClasses.DataGridColumn;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.UIComponentDescriptor;
import mx.core.mx_internal;
import mx.events.FlexEvent;
import mx.events.ListEvent;
import mx.styles.*;



//	begin class def

public class FormContent
	extends com.esria.samples.dashboard.view.PodContentBase
	implements mx.binding.IBindingClient
{

	//	instance variables
/**
 * @private
 **/
	public var _FormContent_Button2 : mx.controls.Button;

/**
 * @private
 **/
	public var _FormContent_Button3 : mx.controls.Button;

/**
 * @private
 **/
	public var _FormContent_ComboBox1 : mx.controls.ComboBox;

/**
 * @private
 **/
	public var _FormContent_DataGrid1 : mx.controls.DataGrid;

/**
 * @private
 **/
	public var _FormContent_DataGridColumn1 : mx.controls.dataGridClasses.DataGridColumn;

/**
 * @private
 **/
	public var _FormContent_DataGridColumn2 : mx.controls.dataGridClasses.DataGridColumn;

/**
 * @private
 **/
	public var _FormContent_DataGridColumn3 : mx.controls.dataGridClasses.DataGridColumn;

/**
 * @private
 **/
	public var _FormContent_Label5 : mx.controls.Label;

	[Bindable]
/**
 * @private
 **/
	public var deleteButton : mx.controls.Button;

	[Bindable]
/**
 * @private
 **/
	public var field0Input : mx.controls.TextInput;

	[Bindable]
/**
 * @private
 **/
	public var field0Label : mx.controls.Label;

	[Bindable]
/**
 * @private
 **/
	public var field1Input : mx.controls.DateField;

	[Bindable]
/**
 * @private
 **/
	public var field1Label : mx.controls.Label;

	[Bindable]
/**
 * @private
 **/
	public var field2Input : mx.controls.TextArea;

	[Bindable]
/**
 * @private
 **/
	public var field2Label : mx.controls.Label;

	[Bindable]
/**
 * @private
 **/
	public var indexInput : mx.controls.TextInput;

	[Bindable]
/**
 * @private
 **/
	public var newButton : mx.controls.Button;

	[Bindable]
/**
 * @private
 **/
	public var viewStack : mx.containers.ViewStack;


	//	type-import dummies


	//	Container document descriptor
private var _documentDescriptor_ : mx.core.UIComponentDescriptor = 
new mx.core.UIComponentDescriptor({
  type: com.esria.samples.dashboard.view.PodContentBase
  ,
  propertiesFactory: function():Object { return {
    childDescriptors: [
      new mx.core.UIComponentDescriptor({
        type: mx.containers.HBox
        ,
        stylesFactory: function():void {
          this.horizontalAlign = "right";
        }
        ,
        propertiesFactory: function():Object { return {
          percentWidth: 100.0,
          childDescriptors: [
            new mx.core.UIComponentDescriptor({
              type: mx.controls.ComboBox
              ,
              id: "_FormContent_ComboBox1"
              ,
              events: {
                change: "___FormContent_ComboBox1_change"
              }
              ,
              propertiesFactory: function():Object { return {
                dataProvider: ["Form", "Grid"]
              }}
            })
          ]
        }}
      })
    ,
      new mx.core.UIComponentDescriptor({
        type: mx.containers.ViewStack
        ,
        id: "viewStack"
        ,
        propertiesFactory: function():Object { return {
          percentWidth: 100.0,
          percentHeight: 100.0,
          childDescriptors: [
            new mx.core.UIComponentDescriptor({
              type: mx.containers.VBox
              ,
              propertiesFactory: function():Object { return {
                percentWidth: 100.0,
                percentHeight: 100.0,
                childDescriptors: [
                  new mx.core.UIComponentDescriptor({
                    type: mx.containers.HBox
                    ,
                    propertiesFactory: function():Object { return {
                      percentWidth: 100.0,
                      childDescriptors: [
                        new mx.core.UIComponentDescriptor({
                          type: mx.controls.Label
                          ,
                          id: "field0Label"
                          ,
                          stylesFactory: function():void {
                            this.textAlign = "right";
                          }
                          ,
                          propertiesFactory: function():Object { return {
                            width: 80
                          }}
                        })
                      ,
                        new mx.core.UIComponentDescriptor({
                          type: mx.controls.TextInput
                          ,
                          id: "field0Input"
                          ,
                          propertiesFactory: function():Object { return {
                            percentWidth: 100.0
                          }}
                        })
                      ]
                    }}
                  })
                ,
                  new mx.core.UIComponentDescriptor({
                    type: mx.containers.HBox
                    ,
                    propertiesFactory: function():Object { return {
                      percentWidth: 100.0,
                      childDescriptors: [
                        new mx.core.UIComponentDescriptor({
                          type: mx.controls.Label
                          ,
                          id: "field1Label"
                          ,
                          stylesFactory: function():void {
                            this.textAlign = "right";
                          }
                          ,
                          propertiesFactory: function():Object { return {
                            width: 80
                          }}
                        })
                      ,
                        new mx.core.UIComponentDescriptor({
                          type: mx.controls.DateField
                          ,
                          id: "field1Input"
                        })
                      ]
                    }}
                  })
                ,
                  new mx.core.UIComponentDescriptor({
                    type: mx.containers.HBox
                    ,
                    propertiesFactory: function():Object { return {
                      percentWidth: 100.0,
                      percentHeight: 100.0,
                      childDescriptors: [
                        new mx.core.UIComponentDescriptor({
                          type: mx.controls.Label
                          ,
                          id: "field2Label"
                          ,
                          stylesFactory: function():void {
                            this.textAlign = "right";
                          }
                          ,
                          propertiesFactory: function():Object { return {
                            width: 80
                          }}
                        })
                      ,
                        new mx.core.UIComponentDescriptor({
                          type: mx.controls.TextArea
                          ,
                          id: "field2Input"
                          ,
                          propertiesFactory: function():Object { return {
                            percentWidth: 100.0,
                            percentHeight: 100.0
                          }}
                        })
                      ]
                    }}
                  })
                ,
                  new mx.core.UIComponentDescriptor({
                    type: mx.containers.HBox
                    ,
                    stylesFactory: function():void {
                      this.verticalAlign = "middle";
                      this.horizontalGap = 0;
                    }
                    ,
                    propertiesFactory: function():Object { return {
                      percentWidth: 100.0,
                      childDescriptors: [
                        new mx.core.UIComponentDescriptor({
                          type: mx.controls.Button
                          ,
                          id: "newButton"
                          ,
                          events: {
                            click: "__newButton_click"
                          }
                          ,
                          propertiesFactory: function():Object { return {
                            width: 55
                          }}
                        })
                      ,
                        new mx.core.UIComponentDescriptor({
                          type: mx.controls.Spacer
                          ,
                          propertiesFactory: function():Object { return {
                            percentWidth: 100.0
                          }}
                        })
                      ,
                        new mx.core.UIComponentDescriptor({
                          type: mx.controls.Button
                          ,
                          id: "_FormContent_Button2"
                          ,
                          events: {
                            click: "___FormContent_Button2_click"
                          }
                          ,
                          propertiesFactory: function():Object { return {
                            width: 9,
                            height: 12,
                            styleName: "leftArrowButton"
                          }}
                        })
                      ,
                        new mx.core.UIComponentDescriptor({
                          type: mx.controls.Label
                          ,
                          propertiesFactory: function():Object { return {
                            text: "Record"
                          }}
                        })
                      ,
                        new mx.core.UIComponentDescriptor({
                          type: mx.controls.TextInput
                          ,
                          id: "indexInput"
                          ,
                          events: {
                            enter: "__indexInput_enter"
                          }
                          ,
                          propertiesFactory: function():Object { return {
                            restrict: "0-9",
                            width: 30
                          }}
                        })
                      ,
                        new mx.core.UIComponentDescriptor({
                          type: mx.controls.Label
                          ,
                          id: "_FormContent_Label5"
                        })
                      ,
                        new mx.core.UIComponentDescriptor({
                          type: mx.controls.Button
                          ,
                          id: "_FormContent_Button3"
                          ,
                          events: {
                            click: "___FormContent_Button3_click"
                          }
                          ,
                          propertiesFactory: function():Object { return {
                            width: 9,
                            height: 12,
                            styleName: "rightArrowButton"
                          }}
                        })
                      ,
                        new mx.core.UIComponentDescriptor({
                          type: mx.controls.Spacer
                          ,
                          propertiesFactory: function():Object { return {
                            percentWidth: 100.0
                          }}
                        })
                      ,
                        new mx.core.UIComponentDescriptor({
                          type: mx.controls.Button
                          ,
                          id: "deleteButton"
                          ,
                          events: {
                            click: "__deleteButton_click"
                          }
                          ,
                          propertiesFactory: function():Object { return {
                            label: "Delete",
                            width: 65
                          }}
                        })
                      ]
                    }}
                  })
                ]
              }}
            })
          ,
            new mx.core.UIComponentDescriptor({
              type: mx.containers.Canvas
              ,
              propertiesFactory: function():Object { return {
                childDescriptors: [
                  new mx.core.UIComponentDescriptor({
                    type: mx.controls.DataGrid
                    ,
                    id: "_FormContent_DataGrid1"
                    ,
                    events: {
                      itemClick: "___FormContent_DataGrid1_itemClick",
                      itemDoubleClick: "___FormContent_DataGrid1_itemDoubleClick"
                    }
                    ,
                    propertiesFactory: function():Object { return {
                      percentWidth: 100.0,
                      percentHeight: 100.0,
                      columns: [_FormContent_DataGridColumn1_i(), _FormContent_DataGridColumn2_i(), _FormContent_DataGridColumn3_i()]
                    }}
                  })
                ]
              }}
            })
          ]
        }}
      })
    ]
  }}
})

	//	constructor (Flex display object)
    /**
     * @private
     **/
	public function FormContent()
	{
		super();

		mx_internal::_document = this;

		//	our style settings



		//	properties
		this.percentWidth = 100.0;
		this.percentHeight = 100.0;

		//	events

	}

	//	initialize()
    /**
     * @private
     **/
	override public function initialize():void
	{
 		mx_internal::setDocumentDescriptor(_documentDescriptor_);

		var bindings:Array = _FormContent_bindingsSetup();
		var watchers:Array = [];

		var target:FormContent = this;

		if (_watcherSetupUtil == null)
		{
			var watcherSetupUtilClass:Object = getDefinitionByName("_com_esria_samples_dashboard_view_FormContentWatcherSetupUtil");
			watcherSetupUtilClass["init"](null);
		}

		_watcherSetupUtil.setup(this,
					function(propertyName:String):* { return target[propertyName]; },
					bindings,
					watchers);

		for (var i:uint = 0; i < bindings.length; i++)
		{
			Binding(bindings[i]).execute();
		}

		mx_internal::_bindings = mx_internal::_bindings.concat(bindings);
		mx_internal::_watchers = mx_internal::_watchers.concat(watchers);


		super.initialize();
	}

	//	scripts
	//	<Script>, line 12 - 137

			import mx.collections.ArrayCollection;
			import mx.controls.dataGridClasses.DataGridColumn;
			import mx.events.ListEvent;
			import mx.formatters.DateFormatter;
			import mx.rpc.events.ResultEvent;
			
			[Bindable]
			private var dataFields:ArrayCollection;
			
			[Bindable]
			private var dataProvider:ArrayCollection;
			
			[Bindable]
			private var selectedViewIndex:Number = 0;
			
			[Bindable]
			private var _selectedIndex:Number = -1;
			
			[Bindable]
			private var addingRecord:Boolean;
			
			private var dateFormatter:DateFormatter;
			
			private const NEW:String = "New";
			private const ADD:String = "Add";
			
			override protected function onResultHttpService(e:ResultEvent):void
			{
				dateFormatter = new DateFormatter();
				dateFormatter.formatString = "MM/DD/YY";
				
				var a:Array = xmlListToObjectArray(e.result.item);
				dataProvider = new ArrayCollection(a);
				
				// Get the values from properties XML.
				a = properties.@dataFields.toString().split(",");
				dataFields = new ArrayCollection(a);
				
				var labels:Array = properties.@labels.toString().split(",");
				field0Label.text = labels[0];
				field1Label.text = labels[1];
				field2Label.text = labels[2];
				
				selectedIndex = 0;
				
				if (properties.@selectedViewIndex.toString() != null&&
					Number(properties.@selectedViewIndex) < (viewStack.numChildren - 1)) // Make sure the index is in range.
					selectedViewIndex = Number(properties.@selectedViewIndex);
			}
			
			private function set selectedIndex(n:Number):void
			{
				addingRecord = false;
				
				// Make sure we are within range of dataProvider.
				if (n < 0)
					n = dataProvider.length - 1;
				else if (n > (dataProvider.length - 1))
					n = 0;

				var item:Object = dataProvider.getItemAt(n);
				field0Input.text = item[dataFields[0]];
				field1Input.selectedDate = item[dataFields[1]];
				field2Input.text = item[dataFields[2]];
				
				_selectedIndex = n;
				
				indexInput.text = String(n + 1);
			}
			
			private function get selectedIndex():Number
			{
				return _selectedIndex;
			}
			
			private function onClickDeleteButton():void
			{
				dataProvider.removeItemAt(_selectedIndex);
				
				if (dataProvider.length > 0)
					selectedIndex = _selectedIndex;
			}
			
			private function saveData():void
			{
				var selectedItem:Object = dataProvider.getItemAt(_selectedIndex);
				selectedItem[dataFields[0]] = field0Input.text;
				selectedItem[dataFields[1]] = field1Input.selectedDate;
				selectedItem[dataFields[2]] = field2Input.text;
			}
			
			private function onClickNewButton(e:MouseEvent):void
			{
				if (addingRecord)	// Add the new record to dataProvider
				{
					// Generic object since the data field names are dictated by the xml.
					var o:Object = new Object();
					o[dataFields[0]] = field0Input.text;
					o[dataFields[1]] = field1Input.selectedDate;
					o[dataFields[2]] = field2Input.text;
					dataProvider.addItem(o);
					selectedIndex = dataProvider.length - 1;
					addingRecord = false;
				}
				else				// Clear out the fields for input.
				{
					field0Input.text = field1Input.text = field2Input.text = indexInput.text = "";
					addingRecord = true;
				}
			}
			
			private function formatDate(item:Object, column:DataGridColumn):String
			{
				return dateFormatter.format(item[column.dataField]);
			}
			
			private function onChangeComboBox(e:ListEvent):void
			{
				saveData();
				
				var index:Number = ComboBox(e.target).selectedIndex
				selectedViewIndex = index;
				dispatchViewStackChange(index);
			}
		

	//	end scripts


    //	supporting function definitions for properties, events, styles, effects
/**
 * @private
 **/
public function ___FormContent_ComboBox1_change(event:mx.events.ListEvent):void
{
	onChangeComboBox(event)
}

/**
 * @private
 **/
public function __newButton_click(event:flash.events.MouseEvent):void
{
	onClickNewButton(event)
}

/**
 * @private
 **/
public function ___FormContent_Button2_click(event:flash.events.MouseEvent):void
{
	saveData();selectedIndex-=1;
}

/**
 * @private
 **/
public function __indexInput_enter(event:mx.events.FlexEvent):void
{
	saveData();selectedIndex=Number(TextInput(event.currentTarget).text)-1;
}

/**
 * @private
 **/
public function ___FormContent_Button3_click(event:flash.events.MouseEvent):void
{
	saveData();selectedIndex+=1;
}

/**
 * @private
 **/
public function __deleteButton_click(event:flash.events.MouseEvent):void
{
	onClickDeleteButton()
}

private function _FormContent_DataGridColumn1_i() : mx.controls.dataGridClasses.DataGridColumn
{
	var temp : mx.controls.dataGridClasses.DataGridColumn = new mx.controls.dataGridClasses.DataGridColumn();
	_FormContent_DataGridColumn1 = temp;
	mx.binding.BindingManager.executeBindings(this, "_FormContent_DataGridColumn1", _FormContent_DataGridColumn1);
	return temp;
}

private function _FormContent_DataGridColumn2_i() : mx.controls.dataGridClasses.DataGridColumn
{
	var temp : mx.controls.dataGridClasses.DataGridColumn = new mx.controls.dataGridClasses.DataGridColumn();
	_FormContent_DataGridColumn2 = temp;
	temp.rendererIsEditor = true;
	temp.labelFunction = formatDate;
	mx.binding.BindingManager.executeBindings(this, "_FormContent_DataGridColumn2", _FormContent_DataGridColumn2);
	return temp;
}

private function _FormContent_DataGridColumn3_i() : mx.controls.dataGridClasses.DataGridColumn
{
	var temp : mx.controls.dataGridClasses.DataGridColumn = new mx.controls.dataGridClasses.DataGridColumn();
	_FormContent_DataGridColumn3 = temp;
	mx.binding.BindingManager.executeBindings(this, "_FormContent_DataGridColumn3", _FormContent_DataGridColumn3);
	return temp;
}

/**
 * @private
 **/
public function ___FormContent_DataGrid1_itemClick(event:mx.events.ListEvent):void
{
	selectedIndex=DataGrid(event.currentTarget).selectedIndex;
}

/**
 * @private
 **/
public function ___FormContent_DataGrid1_itemDoubleClick(event:mx.events.ListEvent):void
{
	selectedViewIndex=0;
}


	//	binding mgmt
    private function _FormContent_bindingsSetup():Array
    {
        var result:Array = [];
        var binding:Binding;

        binding = new mx.binding.Binding(this,
            function():int
            {
                return (selectedViewIndex);
            },
            function(_sourceFunctionReturnValue:int):void
            {
				
                _FormContent_ComboBox1.selectedIndex = _sourceFunctionReturnValue;
            },
            "_FormContent_ComboBox1.selectedIndex");
        result[0] = binding;
        binding = new mx.binding.Binding(this,
            function():int
            {
                return (selectedViewIndex);
            },
            function(_sourceFunctionReturnValue:int):void
            {
				
                viewStack.selectedIndex = _sourceFunctionReturnValue;
            },
            "viewStack.selectedIndex");
        result[1] = binding;
        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (addingRecord ? ADD : NEW);
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                newButton.label = _sourceFunctionReturnValue;
            },
            "newButton.label");
        result[2] = binding;
        binding = new mx.binding.Binding(this,
            function():Boolean
            {
                return (dataProvider.length > 0);
            },
            function(_sourceFunctionReturnValue:Boolean):void
            {
				
                _FormContent_Button2.enabled = _sourceFunctionReturnValue;
            },
            "_FormContent_Button2.enabled");
        result[3] = binding;
        binding = new mx.binding.Binding(this,
            function():Boolean
            {
                return (dataProvider.length > 0);
            },
            function(_sourceFunctionReturnValue:Boolean):void
            {
				
                indexInput.enabled = _sourceFunctionReturnValue;
            },
            "indexInput.enabled");
        result[4] = binding;
        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = "of " + (dataProvider.length);
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                _FormContent_Label5.text = _sourceFunctionReturnValue;
            },
            "_FormContent_Label5.text");
        result[5] = binding;
        binding = new mx.binding.Binding(this,
            function():Boolean
            {
                return (dataProvider.length > 0);
            },
            function(_sourceFunctionReturnValue:Boolean):void
            {
				
                _FormContent_Button3.enabled = _sourceFunctionReturnValue;
            },
            "_FormContent_Button3.enabled");
        result[6] = binding;
        binding = new mx.binding.Binding(this,
            function():Boolean
            {
                return (!addingRecord && dataProvider.length > 0);
            },
            function(_sourceFunctionReturnValue:Boolean):void
            {
				
                deleteButton.enabled = _sourceFunctionReturnValue;
            },
            "deleteButton.enabled");
        result[7] = binding;
        binding = new mx.binding.Binding(this,
            function():Object
            {
                return (dataProvider);
            },
            function(_sourceFunctionReturnValue:Object):void
            {
				
                _FormContent_DataGrid1.dataProvider = _sourceFunctionReturnValue;
            },
            "_FormContent_DataGrid1.dataProvider");
        result[8] = binding;
        binding = new mx.binding.Binding(this,
            function():int
            {
                return (_selectedIndex);
            },
            function(_sourceFunctionReturnValue:int):void
            {
				
                _FormContent_DataGrid1.selectedIndex = _sourceFunctionReturnValue;
            },
            "_FormContent_DataGrid1.selectedIndex");
        result[9] = binding;
        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (field0Label.text);
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                _FormContent_DataGridColumn1.headerText = _sourceFunctionReturnValue;
            },
            "_FormContent_DataGridColumn1.headerText");
        result[10] = binding;
        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (dataFields.getItemAt(0));
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                _FormContent_DataGridColumn1.dataField = _sourceFunctionReturnValue;
            },
            "_FormContent_DataGridColumn1.dataField");
        result[11] = binding;
        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (field1Label.text);
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                _FormContent_DataGridColumn2.headerText = _sourceFunctionReturnValue;
            },
            "_FormContent_DataGridColumn2.headerText");
        result[12] = binding;
        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (dataFields.getItemAt(1));
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                _FormContent_DataGridColumn2.dataField = _sourceFunctionReturnValue;
            },
            "_FormContent_DataGridColumn2.dataField");
        result[13] = binding;
        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (field2Label.text);
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                _FormContent_DataGridColumn3.headerText = _sourceFunctionReturnValue;
            },
            "_FormContent_DataGridColumn3.headerText");
        result[14] = binding;
        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (dataFields.getItemAt(2));
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                _FormContent_DataGridColumn3.dataField = _sourceFunctionReturnValue;
            },
            "_FormContent_DataGridColumn3.dataField");
        result[15] = binding;

        return result;
    }

    private function _FormContent_bindingExprs():void
    {
        var destination:*;
		[Binding(id='0')]
		destination = (selectedViewIndex);
		[Binding(id='1')]
		destination = (selectedViewIndex);
		[Binding(id='2')]
		destination = (addingRecord ? ADD : NEW);
		[Binding(id='3')]
		destination = (dataProvider.length > 0);
		[Binding(id='4')]
		destination = (dataProvider.length > 0);
		[Binding(id='5')]
		destination = "of " + (dataProvider.length);
		[Binding(id='6')]
		destination = (dataProvider.length > 0);
		[Binding(id='7')]
		destination = (!addingRecord && dataProvider.length > 0);
		[Binding(id='8')]
		destination = (dataProvider);
		[Binding(id='9')]
		destination = (_selectedIndex);
		[Binding(id='10')]
		destination = (field0Label.text);
		[Binding(id='11')]
		destination = (dataFields.getItemAt(0));
		[Binding(id='12')]
		destination = (field1Label.text);
		[Binding(id='13')]
		destination = (dataFields.getItemAt(1));
		[Binding(id='14')]
		destination = (field2Label.text);
		[Binding(id='15')]
		destination = (dataFields.getItemAt(2));
    }

    /**
     * @private
     **/
    public static function set watcherSetupUtil(watcherSetupUtil:IWatcherSetupUtil):void
    {
        (FormContent)._watcherSetupUtil = watcherSetupUtil;
    }

    private static var _watcherSetupUtil:IWatcherSetupUtil;



	//	embed carrier vars
	//	end embed carrier vars

	//	binding management vars
    /**
     * @private
     **/
    mx_internal var _bindings : Array = [];
    /**
     * @private
     **/
    mx_internal var _watchers : Array = [];
    /**
     * @private
     **/
    mx_internal var _bindingsByDestination : Object = {};
    /**
     * @private
     **/
    mx_internal var _bindingsBeginWithWord : Object = {};

//	end class def
}

//	end package def
}
