
/**
 * 	Generated by mxmlc 2.0
 *
 *	Package:	com.flexspy.imp
 *	Class: 		DataGridValueEnumEditor
 *	Source: 	C:\Documents and Settings\a\My Documents\Flex Builder 3\dsh\src\com\flexspy\imp\DataGridValueEnumEditor.mxml
 *	Template: 	flex2/compiler/mxml/gen/ClassDef.vm
 *	Time: 		2009.10.21 17:04:12 CST
 */

package com.flexspy.imp
{

import flash.accessibility.*;
import flash.debugger.*;
import flash.display.*;
import flash.errors.*;
import flash.events.*;
import flash.external.*;
import flash.filters.*;
import flash.geom.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import mx.binding.*;
import mx.binding.IBindingClient;
import mx.containers.Canvas;
import mx.controls.ComboBox;
import mx.controls.listClasses.IListItemRenderer;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.UIComponentDescriptor;
import mx.core.mx_internal;
import mx.events.FlexEvent;
import mx.styles.*;



//	begin class def

public class DataGridValueEnumEditor
	extends mx.containers.Canvas
	implements mx.binding.IBindingClient, mx.controls.listClasses.IListItemRenderer
{

	//	instance variables
	[Bindable]
/**
 * @private
 **/
	public var combobox : mx.controls.ComboBox;


	//	type-import dummies


	//	Container document descriptor
private var _documentDescriptor_ : mx.core.UIComponentDescriptor = 
new mx.core.UIComponentDescriptor({
  type: mx.containers.Canvas
  ,
  propertiesFactory: function():Object { return {
    childDescriptors: [
      new mx.core.UIComponentDescriptor({
        type: mx.controls.ComboBox
        ,
        id: "combobox"
        ,
        stylesFactory: function():void {
          this.top = "0";
          this.left = "1";
          this.right = "0";
          this.bottom = "1";
        }
        ,
        propertiesFactory: function():Object { return {
          percentWidth: 100.0,
          minWidth: 0,
          visible: true
        }}
      })
    ]
  }}
})

	//	constructor (Flex display object)
    /**
     * @private
     **/
	public function DataGridValueEnumEditor()
	{
		super();

		mx_internal::_document = this;

		//	our style settings



		//	properties
		this.horizontalScrollPolicy = "off";
		this.verticalScrollPolicy = "off";

		//	events
		this.addEventListener("creationComplete", ___DataGridValueEnumEditor_Canvas1_creationComplete);

	}

	//	initialize()
    /**
     * @private
     **/
	override public function initialize():void
	{
 		mx_internal::setDocumentDescriptor(_documentDescriptor_);

		var bindings:Array = _DataGridValueEnumEditor_bindingsSetup();
		var watchers:Array = [];

		var target:DataGridValueEnumEditor = this;

		if (_watcherSetupUtil == null)
		{
			var watcherSetupUtilClass:Object = getDefinitionByName("_com_flexspy_imp_DataGridValueEnumEditorWatcherSetupUtil");
			watcherSetupUtilClass["init"](null);
		}

		_watcherSetupUtil.setup(this,
					function(propertyName:String):* { return target[propertyName]; },
					bindings,
					watchers);

		for (var i:uint = 0; i < bindings.length; i++)
		{
			Binding(bindings[i]).execute();
		}

		mx_internal::_bindings = mx_internal::_bindings.concat(bindings);
		mx_internal::_watchers = mx_internal::_watchers.concat(watchers);


		super.initialize();
	}

	//	scripts
	//	<Script>, line 7 - 58

			import mx.events.DataGridEvent;
			import mx.controls.DataGrid;
			import mx.events.DropdownEvent;
			import mx.events.FlexMouseEvent;
			import mx.events.FlexEvent;
			import mx.collections.ArrayCollection;
			
			private var _editedValue: Object;
			
			public override function parentChanged(p:DisplayObjectContainer):void {
				super.parentChanged(p);
				if (p == null && combobox != null) {
					combobox.close();
				}
			}
			
			[Bindable]
			private var possibleValues: ArrayCollection = new ArrayCollection();
			
			private function onCreationComplete(): void {
				combobox.selectedItem = _editedValue;
				combobox.addEventListener(DropdownEvent.CLOSE, onClose);
				combobox.open();
				focusManager.setFocus(combobox);
			}

			private function onClose(event: DropdownEvent): void {
				var e: KeyboardEvent = new KeyboardEvent(KeyboardEvent.KEY_DOWN);
				e.charCode = Keyboard.ENTER;
				dispatchEvent(e);
			}

			public function set enumaration(value: String): void {
				for each (var itemValue: String in value.split(",")) {
					possibleValues.addItem(itemValue);
				}
			}

			public function set editedValue(value: Object): void {
				_editedValue = value;
			}
			
			public function get editedValue(): Object {
				if (combobox == null) {
					return _editedValue;
				} else {
					return combobox.selectedItem;
				}
			}
			
		

	//	end scripts


    //	supporting function definitions for properties, events, styles, effects
/**
 * @private
 **/
public function ___DataGridValueEnumEditor_Canvas1_creationComplete(event:mx.events.FlexEvent):void
{
	onCreationComplete()
}


	//	binding mgmt
    private function _DataGridValueEnumEditor_bindingsSetup():Array
    {
        var result:Array = [];
        var binding:Binding;

        binding = new mx.binding.Binding(this,
            function():Object
            {
                return (possibleValues);
            },
            function(_sourceFunctionReturnValue:Object):void
            {
				
                combobox.dataProvider = _sourceFunctionReturnValue;
            },
            "combobox.dataProvider");
        result[0] = binding;

        return result;
    }

    private function _DataGridValueEnumEditor_bindingExprs():void
    {
        var destination:*;
		[Binding(id='0')]
		destination = (possibleValues);
    }

    /**
     * @private
     **/
    public static function set watcherSetupUtil(watcherSetupUtil:IWatcherSetupUtil):void
    {
        (DataGridValueEnumEditor)._watcherSetupUtil = watcherSetupUtil;
    }

    private static var _watcherSetupUtil:IWatcherSetupUtil;



	//	embed carrier vars
	//	end embed carrier vars

	//	binding management vars
    /**
     * @private
     **/
    mx_internal var _bindings : Array = [];
    /**
     * @private
     **/
    mx_internal var _watchers : Array = [];
    /**
     * @private
     **/
    mx_internal var _bindingsByDestination : Object = {};
    /**
     * @private
     **/
    mx_internal var _bindingsBeginWithWord : Object = {};

//	end class def
}

//	end package def
}
