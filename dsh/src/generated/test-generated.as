
/**
 * 	Generated by mxmlc 2.0
 *
 *	Package:	
 *	Class: 		test
 *	Source: 	C:\Documents and Settings\a\My Documents\Flex Builder 3\dsh\src\test.mxml
 *	Template: 	flex2/compiler/mxml/gen/ClassDef.vm
 *	Time: 		2009.10.21 17:03:54 CST
 */

package 
{

import flash.accessibility.*;
import flash.debugger.*;
import flash.display.*;
import flash.errors.*;
import flash.events.*;
import flash.events.MouseEvent;
import flash.external.*;
import flash.filters.*;
import flash.geom.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import mx.binding.*;
import mx.controls.LinkButton;
import mx.controls.TextArea;
import mx.core.Application;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.UIComponentDescriptor;
import mx.core.mx_internal;
import mx.events.FlexEvent;
import mx.styles.*;


[Frame(extraClass="_test_FlexInit")]

[Frame(factoryClass="_test_mx_managers_SystemManager")]


//	begin class def

public class test
	extends mx.core.Application
{

	//	instance variables
	[Bindable]
/**
 * @private
 **/
	public var btnFlexSpy : mx.controls.LinkButton;

	[Bindable]
/**
 * @private
 **/
	public var myText : mx.controls.TextArea;


	//	type-import dummies


	//	Container document descriptor
private var _documentDescriptor_ : mx.core.UIComponentDescriptor = 
new mx.core.UIComponentDescriptor({
  type: mx.core.Application
  ,
  propertiesFactory: function():Object { return {
    childDescriptors: [
      new mx.core.UIComponentDescriptor({
        type: mx.controls.LinkButton
        ,
        id: "btnFlexSpy"
        ,
        events: {
          click: "__btnFlexSpy_click"
        }
        ,
        propertiesFactory: function():Object { return {
          x: 512,
          y: 53,
          label: "LinkButton"
        }}
      })
    ,
      new mx.core.UIComponentDescriptor({
        type: mx.controls.TextArea
        ,
        id: "myText"
        ,
        propertiesFactory: function():Object { return {
          percentWidth: 50.0,
          percentHeight: 100.0
        }}
      })
    ]
  }}
})

	//	constructor (Flex display object)
    /**
     * @private
     **/
	public function test()
	{
		super();

		mx_internal::_document = this;

		//	our style settings


		//	ambient styles
		mx_internal::_test_StylesInit();

		//	properties
		this.layout = "vertical";

		//	events
		this.addEventListener("creationComplete", ___test_Application1_creationComplete);

	}

	//	initialize()
    /**
     * @private
     **/
	override public function initialize():void
	{
 		mx_internal::setDocumentDescriptor(_documentDescriptor_);



		super.initialize();
	}

	//	scripts
	//	<Script>, line 5 - 87

		 import mx.core.FlexSprite;
		 import mx.effects.easing.Bounce;
		 import mx.controls.Alert;        
		 import com.flexspy.*;
		
		 public function initApp():void
		 {
		 	var test:ByteArray = new ByteArray;
		 	
		 	//clear(test);
		 	//test.clear();
		 	//test.compress();
		 	
		 	FlexSpy.registerKey(new KeySequence(123, true, false, false));
		    FlexSpy.registerJS();
		    this.btnFlexSpy.setFocus();
		     
		 	var xmlstring:String = 
"\<view id=\"view0\" label=\"Sales\"\> " + 
	"\<pod  id=\"pod00\" type=\"chart\" title=\"Yearly Revenue\" " + 
	"dataSource=\"data/revenue.xml\" selectedViewIndex=\"1\" valueField=\"value\" categoryField=\"month\" " + 
	"dataTipUnitLabel=\"\$\*\M\" dataTipLabelField=\"month\"/\> " + 
	"\<canvas aa=\"10\" /\>" +
"\</view>";

			//myText.text += xmlstring;
			var viewXMLList:XMLList = new XMLList(xmlstring);	
			var i:int = 0;
			
			a(i);
			trace (i);
			
//			trace ( viewXMLList.length());
//			
//			for ( i = 0; i < viewXMLList.length(); i++)
//			{
//				var xml2:XMLList = viewXMLList[i].@*;
//				for (var j:int = 0; j < xml2.length(); j++)
//				{
//					myText.text += "xml2<"+j.toString()+"> :" ;
//					myText.text += "name = "+xml2[j].name();
//					myText.text += "    value = "+xml2[j].toString()+ "\n";
//					    //trace(typeof(xml2[j]));    // xml
//					    //trace(xml2[i].nodeKind()); // attribute
//					    //trace(xml2[i].name());     // id and color
//				} 
//			}
//			for ( i = 0 ; i < viewXMLList.children().length() ; i++ )
//			{
//				myText.text += i.toString();
//				myText.text += "\n";
//				myText.text += viewXMLList.children()[i].toXMLString();
//				myText.text += "\n";
//				
//				var xml1:XMLList = viewXMLList.children()[i].@*;
//				for (j = 0; j < xml1.length(); j++)
//				{
//					myText.text += "xml1<"+j.toString()+"> :" ;
//					myText.text += "name = "+xml1[j].name();
//					myText.text += "    -----    value = "+xml1[j].toString()+ "\n";
//					    //trace(typeof(xml2[j]));    // xml
//					    //trace(xml2[i].nodeKind()); // attribute
//					    //trace(xml2[i].name());     // id and color
//				} 
//			}
			
			
			//myText.text+="viewXMLList:\n";
			//myText.text+=viewXMLList.toString();		     
		     
		 }
		 internal function a(i:int):void
			{
	  		i=1;
	 	 }
		     
		 public function debug():void
		 {
		     FlexSpy.show();
		 }
            
    

	//	end scripts


    //	supporting function definitions for properties, events, styles, effects
/**
 * @private
 **/
public function ___test_Application1_creationComplete(event:mx.events.FlexEvent):void
{
	initApp()
}

/**
 * @private
 **/
public function __btnFlexSpy_click(event:flash.events.MouseEvent):void
{
	debug()
}



	//	initialize style defs for test

	mx_internal static var _test_StylesInit_done:Boolean = false;

	mx_internal function _test_StylesInit():void
	{
		//	only add our style defs to the StyleManager once
		if (mx_internal::_test_StylesInit_done)
			return;
		else
			mx_internal::_test_StylesInit_done = true;

		var style:CSSStyleDeclaration;
		var effects:Array;


		StyleManager.mx_internal::initProtoChainRoots();
	}


	//	embed carrier vars
	//	end embed carrier vars


//	end class def
}

//	end package def
}
