<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml"
                width="100%"
                height="100%"
                viewSourceURL="src/index.html"
                creationComplete="init();"
                paddingTop="0"
                paddingBottom="0"
                paddingLeft="0"
                paddingRight="0">
    <mx:Style source="flex_skins.css"/>
    <mx:Script>
        <![CDATA[
            import mx.events.*;
            import mx.containers.TitleWindow;
            import mx.managers.PopUpManager;
            import mx.controls.Alert;
            import mx.collections.XMLListCollection;
            import mx.managers.DragManager;
            import mx.core.DragSource;
            import mx.controls.List;
            import mx.controls.listClasses.ListBase;
            import mx.core.UIComponent;
            import mx.collections.ArrayCollection;
            import mx.managers.CursorManager;
            import mx.utils.ArrayUtil;
            import mx.rpc.events.FaultEvent;
            import mx.rpc.events.ResultEvent;

            private function addnode(event:Event):void
            {
                var nodeadd:XMLList;
                var str:String = "";
                var newNode:XML;
                if (systree.selectedIndex >= 0)
                {
                    nodeadd = XMLList(systree.selectedItem);
                    if (systree.selectedItem.localName() == "view")
                    {
                        str = "<form value='form" + (nodeadd.children().length()).toString() + "'titlename='待定' key='id' isBranch='true'></form>";
                        //删除节点时应该重新设定FORM号
                        newNode = XML(str as Object);
                        //Alert.show(nodeadd.children().length().toString());
                        nodeadd[0].appendChild(newNode);
                    }
                    else if ((systree.selectedItem.localName() == "form") && (systree.selectedItem.@key == "id"))
                    {
                        str = "<properties value='form" + (nodeadd.children().length()).toString() + "'titlename='待定' key='id'></properties>";
                        newNode = XML(str as Object);
                        //Alert.show(nodeadd.children().length().toString());
                        nodeadd[0].appendChild(newNode);
                    }
                    else
                    {
                        Alert.show("此处不能添加子节点！");
                    }
                }
                else
                {
                    str = "<view value='view" + (systree.dataProvider.length).toString() + "'titlename='待定' key='id' isBranch='true'></view>";
                    sysdtsxml.addItem(XML(str as Object));
//                	nodeadd=XMLList(dtsxml);
//                	str="<view value='view"+(systree.dataProvider.length).toString()+"'titlename='待定' key='id' isBranch='true'></view>";
//            		newNode = XML(str as Object);
//	                nodeadd[0].appendChild(newNode);
                }
            }

            private function addnode2(event:Event):void
            {
                var nodeadd:XMLList;
                var str:String = "";
                var newNode:XML;
                if (usertree.selectedIndex >= 0)
                {
                    nodeadd = XMLList(usertree.selectedItem);
                    if (usertree.selectedItem.localName() == "view")
                    {
                        str = "<form value='form" + (nodeadd.children().length()).toString() + "'titlename='待定' key='id' isBranch='true'></form>";
                        //删除节点时应该重新设定FORM号
                        newNode = XML(str as Object);
                        //Alert.show(nodeadd.children().length().toString());
                        nodeadd[0].appendChild(newNode);
                    }
                    else if ((usertree.selectedItem.localName() == "form") && (usertree.selectedItem.@key == "id"))
                    {
                        str = "<properties value='form" + (nodeadd.children().length()).toString() + "'titlename='待定' key='id'></properties>";
                        newNode = XML(str as Object);
                        //Alert.show(nodeadd.children().length().toString());
                        nodeadd[0].appendChild(newNode);
                    }
                    else
                    {
                        Alert.show("此处不能添加子节点！");
                    }
                }
                else
                {
                    str = "<view value='view" + (usertree.dataProvider.length).toString() + "'titlename='待定' key='id' isBranch='true'></view>";
                    userdtsxml.addItem(XML(str as Object));
                }
                tempstr = "<views>" + userdtsxml.source.toXMLString() + "</views>";
            }

            private function removenode(event:Event):void
            {
                if (systree.selectedIndex >= 0)
                    Alert.show("是否要删除节点？-->" + systree.selectedItem.@titlename, "删除节点", 3, this, removeClickHandler);
                else
                {
                    Alert.show("请选择节点！");
                }
            }

            private function removeClickHandler(event:CloseEvent):void
            {
                if (event.detail == Alert.YES)
                {
                    var children:XMLList = XMLList(systree.selectedItem.parent()).children();
                    for (var i:int = 0; i < children.length(); i++)
                    {
                        if (children[i].@titlename == XML(systree.selectedItem).@titlename)
                        {
                            delete children[i];
                        }
                    }
                }
            }

            private function removenode2(event:Event):void
            {
                if (usertree.selectedIndex >= 0)
                    Alert.show("是否要删除节点？-->" + usertree.selectedItem.@titlename, "删除节点", 3, this, removeClickHandler2);
                else
                {
                    Alert.show("请选择节点！");
                }
            }

            private function removeClickHandler2(event:CloseEvent):void
            {
                if (event.detail == Alert.YES)
                {
                    var children:XMLList = XMLList(usertree.selectedItem.parent()).children();
                    for (var i:int = 0; i < children.length(); i++)
                    {
                        if (children[i].@titlename == XML(usertree.selectedItem).@titlename)
                        {
                            delete children[i];
                        }
                    }
                }
                tempstr = "<views>" + userdtsxml.source.toXMLString() + "</views>";
            }

            private function onTreeDragComplete(event:DragEvent):void
            {
                var titlename0:String = systree.selectedItem.@titlename;
                var tempdtsxml:XMLListCollection = new XMLListCollection();
                var ixml:XML = new XML;
                var tempstrxml:XML = XML(tempstr);
                tempdtsxml.source = XMLList(tempstrxml.view);
                if (tempdtsxml.source == userdtsxml.source)
                    return; //检查是否有拖拽节点，没有，退出！控制在系统树拖拽！
                if (tempdtsxml.length > 0)
                { //
                    if (systree.selectedItem.localName() == "view")
                    {
                        for each (ixml in tempdtsxml.source)
                        {
                            if (ixml.@titlename == titlename0)
                            {
                                Alert.show("视图已经存在，不能插入！");
                                userdtsxml = tempdtsxml;
                                userdtsxml.refresh();
                                return;
                            }
                        }
                    }
                    else
                    {
                        if ((usertree.selectedIndex < 0) || (usertree.selectedItem.localName() != "view") || (systree.selectedItem.@key != "id"))
                        {
                            Alert.show("请检查是否选择目标视图，或拖拽的是否是表单！");
                            userdtsxml = tempdtsxml;
                            userdtsxml.refresh();
                            return;
                        }
                        var newNode:XML = XML(systree.selectedItem);
                        var nodeadd:XMLList;

                        var titlename1:String = usertree.selectedItem.@titlename; //目标树的插入VIEW名字
                        for each (ixml in tempdtsxml.source)
                        { //查找目标树的插入VIEW
                            if (ixml.@titlename == titlename1)
                            {
                                nodeadd = XMLList(ixml);
                            }
                        }
                        for each (ixml in nodeadd.children())
                        { //查找目标树的插入VIEW
                            if (ixml.@titlename == titlename0)
                            {
                                Alert.show("表单已经存在，不能插入！");
                                userdtsxml = tempdtsxml;
                                userdtsxml.refresh();
                                return;
                            }
                        }

                        nodeadd[0].appendChild(newNode);
                        userdtsxml = tempdtsxml;
                        userdtsxml.refresh();
                    }
                }
                else if (systree.selectedItem.localName() != "view")
                {
                    Alert.show("请先拖拽表单！");
                    userdtsxml = tempdtsxml;
                    userdtsxml.refresh();
                    return;
                }
                tempstr = "<views>" + userdtsxml.source.toXMLString() + "</views>"; //将用户树转换为字符串进行保存，不能保存为XMLList/XMLListCollection
            }

            private function onuserTreeDragComplete(event:DragEvent):void
            {
                var titlename0:String = systree.selectedItem.@titlename;
                var tempdtsxml:XMLListCollection = new XMLListCollection();
                var ixml:XML = new XML;
                var tempstrxml:XML = XML(tempstr);
                tempdtsxml.source = XMLList(tempstrxml.view);
                if (tempdtsxml.source == userdtsxml.source)
                    return; //检查是否有拖拽节点，没有，退出！控制在系统树拖拽！
                if (systree.selectedItem.localName() == "view")
                {
                    if (tempdtsxml.length != userdtsxml.length)
                    {
                        Alert.show("不能进行拖拽！");
                        userdtsxml = tempdtsxml;
                        userdtsxml.refresh();
                        return;
                    }
                }
                for (var i:int = 0; i < userdtsxml.length; i++)
                {
                    //检查插入位置的情况
                }
                tempstr = "<views>" + userdtsxml.source.toXMLString() + "</views>"; //将用户树转换为字符串进行保存，不能保存为XMLList/XMLListCollection
            }
        ]]>
    </mx:Script>
    <mx:RemoteObject id="myservice"
                     destination="amfphp"
                     fault="onFault(event)"
                     showBusyCursor="true"
                     source="yspay.dts">
        <mx:method name="getdts"
                   result="ongetdts(event)"/>
        <mx:method name="getusers"
                   result="ongetusers(event)"/>
        <mx:method name="getuserlevels"
                   result="ongetuserlevels(event)"/>
        <mx:method name="getmaxdtsno"
                   result="ongetmaxdtsno(event)"/>
        <mx:method name="adddts"
                   result="onadddts(event)"/>
        <mx:method name="removedts"
                   result="onremovedts(event)"/>
    </mx:RemoteObject>
    <mx:TitleWindow title="系统配置"
                    width="100%"
                    height="100%"
                    fontSize="13"
                    paddingTop="0"
                    paddingBottom="0"
                    paddingLeft="0"
                    paddingRight="0">
        <mx:HBox width="100%"
                 height="100%">
            <mx:VBox width="100%"
                     height="100%">
                <mx:HBox width="100%">
                    <mx:Label text="系统功能配置"/>
                    <mx:Spacer width="100%"/>
                    <mx:Spacer width="100%"/>
                    <mx:ComboBox id="sysmenu"
                                 color="0x323232"
                                 fontSize="13"
                                 close="syscloseHandler(event);"/>
                </mx:HBox>


                <mx:Tree id="systree"
                         dataProvider="{sysdtsxml}"
                         labelField="@titlename"
                         fontSize="13"
                         width="100%"
                         height="100%"
                         itemClick="itemclickEvt();"
                         doubleClickEnabled="true"
                         doubleClick="modtree(event);"
                         allowMultipleSelection="true"
                         dragEnabled="true"
                         dragComplete="onTreeDragComplete(event)"
                         dropEnabled="false"
                         dragMoveEnabled="false"/>
            </mx:VBox>
            <mx:VBox width="100%"
                     height="100%">
                <mx:HBox width="100%">
                    <mx:Label text="用户功能配置"/>
                    <mx:Spacer width="100%"/>
                    <mx:ComboBox id="usermenu"
                                 color="0x323232"
                                 fontSize="13"
                                 close="usercloseHandler(event);"/>
                </mx:HBox>
                <mx:Tree id="usertree"
                         dataProvider="{userdtsxml}"
                         labelField="@titlename"
                         fontSize="13"
                         width="100%"
                         height="100%"
                         itemClick="itemclickEvt2();"
                         doubleClickEnabled="true"
                         doubleClick="modtree2(event);"
                         allowMultipleSelection="true"
                         dragEnabled="true"
                         dragComplete="onuserTreeDragComplete(event)"
                         dropEnabled="true"/>

            </mx:VBox>
        </mx:HBox>
    </mx:TitleWindow>
    <mx:Script>
        <![CDATA[
            import mx.effects.IAbstractEffect;
            Alert.buttonWidth = 100;
            Alert.yesLabel = "确定";
            Alert.noLabel = "取消";

            private var titleWindow:TitleWindow;
            [Bindable]
            private var dtsxml:XML = <config>
                    <views titlename="asd" value="111v">
                        <shuxing key="111" titlename="asd" value="111v" />
                        <v1 key="id" titlename="交易分析" value="view0" isBranch="true">
                            <f1 key="id" titlename="钻取分析" value="form0" isBranch="true">
                                <properties key="type" titlename="报表类别" value="chart0">
                                    <from key="type" titlename="AAAA报表类别" value="chart0"/>
                                </properties>
                            </f1>
                            <f1 key="id" titlename="钻取明细" value="form1" isBranch="true">
                                <properties key="type" titlename="报表类别" value="chart1"/>
                                <properties key="database" titlename="数据源" value="dz2.xml"/>
                                <properties key="valuefield" titlename="数据字段" value="value"/>
                            </f1>
                        </v1>
                        <view key="id" titlename="商户分析" value="view1" isBranch="true">
                            <form key="id" titlename="商户交易" value="form0" isBranch="true">
                                <properties key="type" titlename="报表类别" value="chart0"/>
                                <properties key="database" titlename="数据源" value="dz1.xml"/>
                                <properties key="valuefield" titlename="数据字段" value="value"/>
                            </form>
                            <form key="id" titlename="雷达图" value="form1" isBranch="true">
                                <properties key="type" titlename="报表类别" value="chart1"/>
                                <properties key="database" titlename="数据源" value="dz2.xml"/>
                                <properties key="valuefield" titlename="数据字段" value="value"/>
                            </form>
                        </view>
                        <view key="id" titlename="发卡分析" value="view2" isBranch="true">
                            <form key="id" titlename="卡类分析" value="form0" isBranch="true">
                                <properties key="type" titlename="报表类别" value="chart0"/>
                                <properties key="database" titlename="数据源" value="dz1.xml"/>
                                <properties key="valuefield" titlename="数据字段" value="value"/>

                            </form>
                            <form key="id" titlename="状态分析" value="form1" isBranch="true">
                                <properties key="type" titlename="报表类别" value="chart1"/>
                                <properties key="database" titlename="数据源" value="dz2.xml"/>
                            </form>
                            <form key="name" titlename="视图属性" value="form2"/>

                        </view>
                    </views>
                </config>;
            [Bindable]
            private var dtsxml2:XML = <views>
                </views>;

            [Bindable]
            private var sysdtsxml:XMLListCollection = new XMLListCollection(dtsxml.views);
            [Bindable]
            private var userdtsxml:XMLListCollection = new XMLListCollection(dtsxml2.view);
            private var tempstr:String = "";
            private var maxnum:int = 100000;
            private var dtsac:ArrayCollection;
            private var userac:ArrayCollection;
            private var userlevelac:ArrayCollection;
            private var dtsmaxac:ArrayCollection;
            private var caption:String = "";
            private var isinit:Boolean;
            private var levelfiterstr:String = "";

            private function addindex(event:Event):void
            {
                Alert.show(systree.dataProvider.length.toString());
            }

            private function init():void
            {
                var expandMenu:ContextMenu = new ContextMenu();
                expandMenu.hideBuiltInItems();
                var menumodtree:ContextMenuItem = new ContextMenuItem("系统－修改节点");
                menumodtree.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, modtree);
                expandMenu.customItems.push(menumodtree);

                var menuaddnode:ContextMenuItem = new ContextMenuItem("系统－添加节点");
                menuaddnode.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, addnode);
                expandMenu.customItems.push(menuaddnode);

                var menuremovenode:ContextMenuItem = new ContextMenuItem("系统－删除节点");
                menuremovenode.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, removenode);
                expandMenu.customItems.push(menuremovenode);

                var menunoselect:ContextMenuItem = new ContextMenuItem("清除选择");
                menunoselect.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, noselect);
                expandMenu.customItems.push(menunoselect);
                systree.contextMenu = expandMenu;

                menunoselect = new ContextMenuItem("保存配置模板");
                menunoselect.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, saveconfig);
                expandMenu.customItems.push(menunoselect);
                systree.contextMenu = expandMenu;

                menunoselect = new ContextMenuItem("删除配置模板");
                menunoselect.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, removedts);
                expandMenu.customItems.push(menunoselect);
                systree.contextMenu = expandMenu;

                var expandMenu2:ContextMenu = new ContextMenu();
                expandMenu2.hideBuiltInItems();
                var menumodtree2:ContextMenuItem = new ContextMenuItem("用户－修改节点");
                menumodtree2.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, modtree2);
                expandMenu2.customItems.push(menumodtree2);

                var menuaddnode2:ContextMenuItem = new ContextMenuItem("用户－添加节点");
                menuaddnode2.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, addnode2);
                expandMenu2.customItems.push(menuaddnode2);

                var menuremovenode2:ContextMenuItem = new ContextMenuItem("用户－删除节点");
                menuremovenode2.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, removenode2);
                expandMenu2.customItems.push(menuremovenode2);

                menuremovenode2 = new ContextMenuItem("保存用户配置");
                menuremovenode2.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, saveconfig);
                expandMenu2.customItems.push(menuremovenode2);

                menuremovenode2 = new ContextMenuItem("删除用户配置");
                menuremovenode2.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, removedts);
                expandMenu2.customItems.push(menuremovenode2);

                usertree.contextMenu = expandMenu2;
//				myservice.getuserlevels.send();
                //trace(dtsxml.children());
//				var tttt:Array=Array(dtsxml.children().children().children());
                var tttlist:XMLList = XMLList(dtsxml);
                xmllevel(tttlist);
                Alert.show(tttnum.toString());
//				for each(var s:XML in tttt[0]){
//				trace(s);
//				}
            }
            private var tttnum:int = 0;

            private function xmllevel(tttxml:XMLList):void
            {
                tttnum++;
                //trace(tttxml+"kkkkkkkkkk");
                if ((tttxml.children()).length() != 0)
                {
                    trace(tttxml.children().length() + "kkkkkkkkkk");
                    trace(tttxml.children() + "ZZZZZZZZZ");
                    xmllevel(tttxml.children());
                }
                else
                    trace(tttxml[0] + "kkkkkkkkkkkkkkkkkk");
                return;
            }

            private function noselect(event:Event):void
            {
                systree.selectedItem = null;
            }

            private function removedts(event:Event):void
            {
                if ((sysmenu.selectedItem.label == "中级用户") && (event.target.caption == "删除配置模板"))
                    return;
                caption = event.target.caption;
                if (caption == "删除配置模板")
                    myservice.removedts.send(sysmenu.selectedItem.label);
                else
                    myservice.removedts.send(usermenu.selectedItem.label);
            }

            private function onremovedts(e:ResultEvent):void
            {
                if (e.result >= "0")
                {
                    if (caption == "删除配置模板")
                    {
                        caption = "sys";
                        myservice.getdts.send(sysmenu.selectedItem.label);
                    }
                    else
                    {
                        caption = "user";
                        myservice.getdts.send(usermenu.selectedItem.label);
                    }
                    Alert.show("成功删除" + e.result.toString() + "条记录！", "", 2, this);
                }
                else
                    Alert.show("删除记录失败", "", 2, this);
            }

            private function saveconfig(event:Event):void
            {
                if ((sysmenu.selectedItem.label == "中级用户") && (event.target.caption == "保存配置模板"))
                    return;
                caption = event.target.caption; //保存配置模板OR保存用户配置
                myservice.getmaxdtsno.send(); //获取最大DTS号
            }

            private function ongetmaxdtsno(e:ResultEvent):void
            {
                dtsmaxac = new ArrayCollection(ArrayUtil.toArray(e.result));
                dtsmaxac.refresh();
                if (dtsmaxac[0][0] > 99999)
                    maxnum = dtsmaxac[0][0];
                if (caption == "保存配置模板")
                    createdts(sysdtsxml, sysmenu.selectedItem.label);
                else
                    createdts(userdtsxml, usermenu.selectedItem.label);
            }

            private function newdtsno(i:int):int
            {
                return (++i);
            }

            private function doxml(dtsno:int, x:XML, dts:Array, dtsinfo:Array):void
            {
                var temparr:Array = new Array;

                if (x.localName() == "shuxing")
                {
                    temparr = [dtsno, x.@key.toString(), x.@titlename.toString(), x.@value.toString()];
                    dts.push(temparr);
                    return;
                }
                temparr = [dtsno, "__DTS__", "", (++dtsno).toString()];
                dts.push(temparr);
                temparr = [dtsno, x.localName(), "mapserver", "", "crusername", "", "", ""];
                dtsinfo.push(temparr);
                temparr = [dtsno, x.@key.toString(), x.@titlename.toString(), x.@value.toString()];
                dts.push(temparr);

                var ax:Array = new Array(x.children());
                for each (var s:XML in ax[0])
                {
                    doxml(dtsno, s, dts, dtsinfo);
//						trace(s);
//						trace(dtsno.toString());
                }
                return;

            }

            private function createdts(tempac:XMLListCollection, crusername:String):void
            {
                var dtsarr:Array = new Array(new Array());
                dtsarr = [];
                var dtsinfoarr:Array = new Array(new Array());
                dtsinfoarr = [];
                var dtsnum:int = maxnum + 1;
                var viewnum:int = dtsnum;
                var formnum:int = 0;
                var pronum:int = 0;

                doxml(viewnum, tempac.source[0], dtsarr, dtsinfoarr);
                trace(dtsarr);
                trace(dtsinfoarr);

//				var temparr:Array=[viewnum,"views","",crusername];
//				dtsarr.push(temparr);
//				temparr=[viewnum,"views","mapserver","",crusername,"","",""];
//				dtsinfoarr.push(temparr);
//				for(var i:int=0;i<tempac.length;i++){
//					dtsnum++;formnum=dtsnum;
//					temparr=[viewnum,"__view__","",formnum.toString()];
//					dtsarr.push(temparr);
//					temparr=[formnum.toString(),"view","mapserver","",crusername,"","",""];
//					dtsinfoarr.push(temparr);
//					temparr=[formnum,"key","",tempac[i].@key.toString()];
//					dtsarr.push(temparr);
//					temparr=[formnum,"value","",tempac[i].@value.toString()];
//					dtsarr.push(temparr);
//					temparr=[formnum,"titlename","",tempac[i].@titlename.toString()];
//					dtsarr.push(temparr);
//					temparr=[formnum,"isBranch","",tempac[i].@isBranch.toString()];
//					dtsarr.push(temparr);
//					var formxml:XML=XML(tempac[i]);
//					var formxmlcc:XMLListCollection=new XMLListCollection(formxml.form);
//					for(var j:int=0;j<formxmlcc.length;j++){
//						dtsnum++;pronum=dtsnum;
//						temparr=[formnum,"__form__","",pronum.toString()];
//						dtsarr.push(temparr);
//						temparr=[pronum.toString(),"form","mapserver","",crusername,"","",""];
//						dtsinfoarr.push(temparr);
//						temparr=[pronum,"key","",formxmlcc[j].@key.toString()];
//						dtsarr.push(temparr);
//						temparr=[pronum,"value","",formxmlcc[j].@value.toString()];
//						dtsarr.push(temparr);
//						temparr=[pronum,"titlename","",formxmlcc[j].@titlename.toString()];
//						dtsarr.push(temparr);
//						temparr=[pronum,"isBranch","",formxmlcc[j].@isBranch.toString()];
//						dtsarr.push(temparr);
//						var proxml:XML=XML(formxmlcc[j]);
//						var proxmlcc:XMLListCollection=new XMLListCollection(proxml.properties);
//						for(var k:int=0;k<proxmlcc.length;k++){
//							dtsnum++;
//							temparr=[pronum,"__properties__","",dtsnum.toString()];
//							dtsarr.push(temparr);
//							temparr=[dtsnum.toString(),"properties","mapserver","",crusername,"","",""];
//							dtsinfoarr.push(temparr);
//							temparr=[dtsnum.toString(),"key","",proxmlcc[k].@key.toString()];
//							dtsarr.push(temparr);
//							temparr=[dtsnum.toString(),"value","",proxmlcc[k].@value.toString()];
//							dtsarr.push(temparr);
//							temparr=[dtsnum.toString(),"titlename","",proxmlcc[k].@titlename.toString()];
//							dtsarr.push(temparr);
//							temparr=[dtsnum.toString(),"isBranch","",proxmlcc[k].@isBranch.toString()];
//							dtsarr.push(temparr);
//						}
//					}
//					
//				}
////				trace(dtsarr);
////				trace(dtsinfoarr);
                myservice.adddts.send(dtsarr, dtsinfoarr);
            }

            private function syscloseHandler(event:Event):void
            {
                caption = "sys";
                userac.filterFunction = null;
                userac.refresh();
                levelfiterstr = sysmenu.selectedItem.label;
                userac.filterFunction = userfiter;
                userac.refresh();
                usermenu.selectedIndex = 0;
                Alert.show("切换前请先保存用户配置，是否要更换模板？", "模板更换提示", 3, this, syscloseClickHandler);
            }

            private function syscloseClickHandler(event:CloseEvent):void
            {
                if (event.detail == Alert.YES)
                {
                    isinit = true;
                    myservice.getdts.send(sysmenu.selectedItem.label);
                }
            }

            private function usercloseHandler(event:Event):void
            {
                caption = "user";
                myservice.getdts.send(usermenu.selectedItem.label);
            }

            private function userfiter(userinfo:Object):Boolean
            {
                return userinfo.userlevel == levelfiterstr;
            }

            private function onFault(e:FaultEvent):void
            {
                CursorManager.removeBusyCursor();
                Alert.show(e.fault.toString());
            }

            private function ongetusers(e:ResultEvent):void
            {
                userac = new ArrayCollection(ArrayUtil.toArray(e.result));
                userac.refresh();
                usermenu.dataProvider = userac;
                levelfiterstr = "管理用户";
                userac.filterFunction = userfiter;
                userac.refresh();
                usermenu.selectedIndex = 0;
//				caption="sys";
//				isinit=true;
//				myservice.getdts.send(sysmenu.selectedItem.label);
//				myservice.getdts.send(usermenu.selectedItem.label);
            }

            private function ongetuserlevels(e:ResultEvent):void
            {
                userlevelac = new ArrayCollection(ArrayUtil.toArray(e.result));
                userlevelac.refresh();
                sysmenu.dataProvider = userlevelac;
                sysmenu.selectedIndex = 0;
                myservice.getusers.send(); //模板下拉选择后再选择用户
            }

            private function ongetdts(e:ResultEvent):void
            {
                dtsac = new ArrayCollection(ArrayUtil.toArray(e.result));
                dtsac.refresh();
                var newtempstr:String = "<views>";
                var level:int = 0;
                for (var i:int = 0; i < dtsac.length; i++)
                {
                    if ((dtsac[i]["keyinfo"] == "__view__") && (level == 0))
                    {
                        level = 1;
                        newtempstr += "<view ";
                    }
                    else if ((dtsac[i]["keyinfo"] == "__view__") && (level == 1))
                    {
                        level = 1;
                        newtempstr += "/><view ";
                    }
                    else if ((dtsac[i]["keyinfo"] == "__view__") && (level == 2))
                    {
                        level = 1;
                        newtempstr += "/></view><view ";
                    }
                    else if ((dtsac[i]["keyinfo"] == "__view__") && (level == 3))
                    {
                        level = 1;
                        newtempstr += "/></form></view><view ";
                    }
                    else if ((dtsac[i]["keyinfo"] == "__form__") && (level == 1))
                    {
                        level = 2;
                        newtempstr += "><form ";
                    }
                    else if ((dtsac[i]["keyinfo"] == "__form__") && (level == 2))
                    {
                        level = 2;
                        newtempstr += "/><form ";
                    }
                    else if ((dtsac[i]["keyinfo"] == "__form__") && (level == 3))
                    {
                        level = 2;
                        newtempstr += "/></form><form ";
                    }
                    else if ((dtsac[i]["keyinfo"] == "__properties__") && (level == 2))
                    {
                        level = 3;
                        newtempstr += "><properties ";
                    }
                    else if ((dtsac[i]["keyinfo"] == "__properties__") && (level == 3))
                    {
                        level = 3;
                        newtempstr += "/><properties ";
                    }
                    else
                    {
                        newtempstr += dtsac[i]["keyinfo"] + "=\"" + dtsac[i]["value"] + "\" ";
                    }
                }
                if (level == 0)
                    newtempstr += "</views>";
                else if (level == 1)
                    newtempstr += "/></views>";
                else if (level == 2)
                    newtempstr += "/></view></views>";
                else if (level == 3)
                    newtempstr += "/></form></view></views>";
                trace(newtempstr);
                var newtempstrxml:XML = XML(newtempstr);

                if (caption == "user")
                {
                    userdtsxml.source = XMLList(newtempstrxml.view);
                    userdtsxml.refresh();
                    tempstr = newtempstr;
                }
                else
                {
                    sysdtsxml.source = XMLList(newtempstrxml.view);
                    sysdtsxml.refresh();
                }
                if (isinit)
                {
                    isinit = false;
                    caption = "user";
                    myservice.getdts.send(usermenu.selectedItem.label);
                }
            }

            private function onadddts(e:ResultEvent):void
            {
                if (e.result >= "1")
                    Alert.show("成功添加" + e.result + "条记录！", "", 2, this);
                else
                    Alert.show("添加ts失败", "", 2, this);
            }

            private function modtree(event:Event):void
            {
                if (systree.selectedIndex >= 0)
                {
                    titleWindow = PopUpManager.createPopUp(this, modifytree1, true) as TitleWindow;
                    PopUpManager.centerPopUp(titleWindow);
                }
                else
                {
                    Alert.show("请选择节点！");
                }
            }

            private function modtree2(event:Event):void
            {
                if (usertree.selectedIndex >= 0)
                {
                    titleWindow = PopUpManager.createPopUp(this, modifytree2, true) as TitleWindow;
                    PopUpManager.centerPopUp(titleWindow);
                    tempstr = "<views>" + userdtsxml.source.toXMLString() + "</views>";
                }
                else
                {
                    Alert.show("请选择节点！");
                }
            }

            public function modtree22():void
            {
                tempstr = "<views>" + userdtsxml.source.toXMLString() + "</views>";
            }

            private function itemclickEvt():void
            {
                var selectedNode:Object = systree.selectedItem;
                if (systree.dataDescriptor.isBranch(selectedNode))
                { //指示此节点是否为非终止节点的布尔值
                    systree.expandItem(selectedNode, !systree.isItemOpen(selectedNode), true, true);
                }
            }

            private function itemclickEvt2():void
            {
                var selectedNode:Object = usertree.selectedItem;
                if (usertree.dataDescriptor.isBranch(selectedNode))
                { //指示此节点是否为非终止节点的布尔值
                    usertree.expandItem(selectedNode, !usertree.isItemOpen(selectedNode), true, true);
                }
            }
        ]]>
    </mx:Script>
</mx:Application>
